{"version":3,"sources":["components/NewNoteForm.jsx","components/Notes.jsx","components/Tags.jsx","components/App.jsx","index.js"],"names":["Form","id","name","onSubmit","this","props","submitNewNote","type","required","placeholder","onChange","handleNewNoteTitleChange","className","onKeyUp","validateTags","handleNewNoteTagChange","onClick","event","addTagsButton","newNoteTags","map","newNoteTag","key","removeTags","rows","cols","handleNewNoteContentChange","React","Component","Note","filteredNotes","filteredNote","title","deleteIndividualNote","content","tag","Tag","getNotesByTags","variant","size","unduplicatedTagsArray","getFilteredTags","filteredTags","filteredTag","removeFilteredTags","App","state","newNoteTitle","newNoteContent","notes","bind","validateForm","saveNotesToLocalStorage","retrieveNotesFromLocalStorage","length","console","log","totalTagsArrayFlat","note","flat","setState","Set","prevProps","prevState","tempTagArrayFlat","tempTagArrayFlatUnduplicated","target","value","preventDefault","tempNewNoteTagsArray","push","window","keyCode","splice","inputTag","document","querySelector","setCustomValidity","reset","tempFilteredTags","finalTags2","finalTags3","undefined","tempFilteredNotesArray","checker","arr","every","item","includes","i","tempFilteredTagsArray","forEach","notesCopy","confirm","localStorage","removeItem","JSON","stringify","setItem","tempNotes","retrievingData","parse","getItem","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.30dd2f24.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default class Form extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <form id=\"form\" name=\"form\" onSubmit={this.props.submitNewNote}>\r\n          <label id=\"labelTitle\">\r\n            <input\r\n              id=\"inputTitle\"\r\n              type=\"text\"\r\n              name=\"title\"\r\n              required=\"required\"\r\n              placeholder=\"제목 입력\"\r\n              onChange={this.props.handleNewNoteTitleChange}\r\n            />\r\n          </label>\r\n\r\n          <label id=\"labelTag\">\r\n            <div className=\"inputTagSectionGrid\">\r\n              <input\r\n                id=\"inputTag\"\r\n                type=\"text\"\r\n                name=\"tag\"\r\n                placeholder=\"버튼이나 엔터키로 태그 추가\"\r\n                onKeyUp={this.props.validateTags}\r\n                onChange={this.props.handleNewNoteTagChange}\r\n              />\r\n              <button\r\n                id=\"addTagButton\"\r\n                onClick={(event) => this.props.addTagsButton(event)}\r\n              >\r\n                +\r\n              </button>\r\n            </div>\r\n          </label>\r\n\r\n          <div className=\"listContainer\">\r\n            <ul>\r\n              {this.props.newNoteTags.map((newNoteTag, key) => (\r\n                <li key={key}>\r\n                  <span>{newNoteTag}</span>\r\n                  <button\r\n                    id=\"tagRemoveButton\"\r\n                    onClick={(event) => this.props.removeTags(event, key)}\r\n                  >\r\n                    ❌\r\n                  </button>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n\r\n          <label id=\"labelContent\">\r\n            <textarea\r\n              id=\"textareaContent\"\r\n              type=\"textarea\"\r\n              name=\"content\"\r\n              rows=\"4\"\r\n              cols=\"48\"\r\n              required=\"required\"\r\n              placeholder=\"내용을 입력하세요\"\r\n              onChange={this.props.handleNewNoteContentChange}\r\n            />\r\n          </label>\r\n          <button id=\"submitButton\">Submit</button>\r\n        </form>\r\n        <br />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class Note extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div id=\"notes\">\r\n          <div id=\"notes-container\">\r\n            {/* Go through 'notes' array to create individual note with each index */}\r\n            {this.props.filteredNotes.map((filteredNote, key) => (\r\n              <div className=\"individualNote\" key={key} id={key}>\r\n                {/* 1. Note Title */}\r\n                <h3 className=\"individualNoteTitle\">\r\n                  {key}. {filteredNote.title}\r\n                </h3>\r\n\r\n                {/* 2. Note Delete Button */}\r\n                <button\r\n                  className=\"individualNoteDeleteButton\"\r\n                  key={key}\r\n                  id={key}\r\n                  onClick={this.props.deleteIndividualNote}\r\n                >\r\n                  X\r\n                </button>\r\n                <hr />\r\n\r\n                {/* 3. Note Content */}\r\n                <div className=\"individualNoteContent\">\r\n                  {filteredNote.content}\r\n                </div>\r\n\r\n                {/* 4. Note Tag */}\r\n                <div className=\"individualNoteTag\">\r\n                  Tag:\r\n                  {filteredNote.tag.map((tag, key) => (\r\n                    <li key={key}>{tag}</li>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n// import Button from 'react-bootstrap/Button';\r\n\r\nexport default class Tag extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        {/* 1. Tag Buttons */}\r\n        <div id=\"tags\">\r\n          <div id=\"allTags\">\r\n            <h2>All tags</h2>\r\n\r\n            {/* 1-1. All Button */}\r\n            <button\r\n              id=\"allTagButton\"\r\n              onClick={() => this.props.getNotesByTags()}\r\n              variant=\"primary\"\r\n              size=\"lg\"\r\n            >\r\n              All\r\n            </button>\r\n\r\n            {/* 1-2. Rest of the buttons */}\r\n            {this.props.unduplicatedTagsArray.map((tag, key) => (\r\n              <div key={key} id=\"individualTag\">\r\n                <button\r\n                  id=\"individualTagButton\"\r\n                  onClick={() => this.props.getFilteredTags(tag)}\r\n                >\r\n                  {tag}\r\n                </button>\r\n              </div>\r\n            ))}\r\n            <br />\r\n          </div>\r\n          {/* ------------------------------------------------------------------------------------------ */}\r\n          {/* 2. Filtered tag buttons */}\r\n          <div id=\"filteredTags\">\r\n            <h2>Filtered tags</h2>\r\n            {this.props.filteredTags.map((filteredTag, key) => (\r\n              <button\r\n                id=\"filteredTagButton\"\r\n                key={key}\r\n                onClick={() => this.props.removeFilteredTags(key)}\r\n              >\r\n                {filteredTag} ❌\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport './style.css';\nimport NewNoteForm from './NewNoteForm.jsx';\nimport Notes from './Notes.jsx';\nimport Tags from './Tags.jsx';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // 1. NewNoteForm.jsx\n      newNoteTitle: '',\n      newNoteTag: '', // the one currently on input field\n      newNoteContent: '',\n      newNoteTags: [], // array that saves each tag through user pressing enter or clicking button\n\n      // 2. Tags.jsx\n      unduplicatedTagsArray: [], // array that contains unduplicated tags (used to make buttons for user to choose filter from)\n      filteredTags: [], // array that contains tags to filter notes\n\n      // 3. Notes.jsx\n      notes: [\n        {\n          content: '위의 폼을 작성해 새 노트를 만들어보세요!',\n          tag: ['knowhow', 'stickynote'],\n          title: '고정 공지 노트',\n        },\n      ], // (entire) notes array\n      filteredNotes: [], // array that contains notes based on 'filteredTags' above\n    };\n    // 1. NewNoteForm.jsx\n    this.handleNewNoteTitleChange = this.handleNewNoteTitleChange.bind(this);\n    this.handleNewNoteTagChange = this.handleNewNoteTagChange.bind(this);\n    this.handleNewNoteContentChange = this.handleNewNoteContentChange.bind(\n      this\n    );\n\n    this.addTagsButton = this.addTagsButton.bind(this);\n    this.validateTags = this.validateTags.bind(this);\n    this.removeTags = this.removeTags.bind(this);\n\n    this.submitNewNote = this.submitNewNote.bind(this);\n    this.validateForm = this.validateForm.bind(this);\n\n    // 2. Tags.jsx\n    this.getFilteredTags = this.getFilteredTags.bind(this);\n    this.getNotesByTags = this.getNotesByTags.bind(this);\n    this.removeFilteredTags = this.removeFilteredTags.bind(this);\n\n    // 3. Notes.jsx\n    this.deleteIndividualNote = this.deleteIndividualNote.bind(this);\n\n    // 4. API-related\n    this.saveNotesToLocalStorage = this.saveNotesToLocalStorage.bind(this);\n    this.retrieveNotesFromLocalStorage = this.retrieveNotesFromLocalStorage.bind(\n      this\n    );\n  }\n\n  // 0. Lifecycle Methods\n  componentDidMount() {\n    if (this.state.notes.length > 0) {\n      this.saveNotesToLocalStorage();\n    }\n    this.retrieveNotesFromLocalStorage(); //lawcal\n    console.log('componentDidMount');\n    let totalTagsArray = this.state.notes.map((note) => note.tag);\n    let totalTagsArrayFlat = totalTagsArray.flat();\n    // let tempNotes =\n    // let tempFilteringTag = [undefined];\n    this.setState({\n      unduplicatedTagsArray: [...new Set(totalTagsArrayFlat)],\n    });\n    this.getNotesByTags(!undefined);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevState.notes !== this.state.notes ||\n      prevState.filteredTags !== this.state.filteredTags\n    ) {\n      let tempTagArray = this.state.notes.map((note) => note.tag); // 1. get all notes' tag\n      let tempTagArrayFlat = tempTagArray.flat(); // 2. make #1 flat\n      let tempTagArrayFlatUnduplicated = [...new Set(tempTagArrayFlat)]; // 3. get #2 unduplicated\n\n      this.setState({\n        unduplicatedTagsArray: tempTagArrayFlatUnduplicated,\n      });\n\n      this.getNotesByTags(!undefined); // 게시판에 노트 추가되는 것처럼 보이게\n    }\n  }\n\n  // 1. NewNoteForm.jsx\n  handleNewNoteTitleChange(event) {\n    this.setState({\n      newNoteTitle: event.target.value,\n    });\n  }\n\n  handleNewNoteTagChange(event) {\n    this.setState({\n      newNoteTag: event.target.value,\n    });\n  }\n\n  handleNewNoteContentChange(event) {\n    this.setState({\n      newNoteContent: event.target.value,\n    });\n  }\n\n  addTagsButton(event) {\n    // has a default behaviour of acting as a submit button\n    event.preventDefault();\n\n    // Add a new tag only if there is any text in the text field\n    if (this.state.newNoteTag) {\n      let tempNewNoteTagsArray = this.state.newNoteTags;\n      tempNewNoteTagsArray.push(this.state.newNoteTag);\n      this.setState({\n        newNoteTags: tempNewNoteTagsArray,\n      });\n    }\n  }\n\n  validateTags(event) {\n    // if enter pressed, empty the input field\n    if (window.event.keyCode === 13) {\n      this.setState({\n        newNoteTag: '',\n      });\n      event.target.value = '';\n    }\n\n    if (this.state.newNoteTags.length <= 0) {\n      console.log('no tags yet');\n    }\n  }\n\n  removeTags(event, key) {\n    event.preventDefault();\n    let tempNewNoteTagsArray = this.state.newNoteTags;\n    tempNewNoteTagsArray.splice(key, 1);\n    this.setState({\n      newNoteTags: tempNewNoteTagsArray,\n    });\n  }\n\n  submitNewNote(event) {\n    event.preventDefault();\n\n    let inputTag = document.querySelector('#inputTag');\n    // inputTag.addEventListener('input', () => {\n    if (inputTag.value === '') {\n      console.log('1');\n      inputTag.setCustomValidity('Enter at least a tag please!');\n    }\n\n    this.setState(\n      {\n        notes: [\n          ...this.state.notes,\n          {\n            title: this.state.newNoteTitle,\n            tag: this.state.newNoteTags,\n            content: this.state.newNoteContent,\n          },\n        ],\n        newNoteTitle: '',\n        newNoteTags: [],\n        newNoteContent: '',\n      },\n      () => {\n        this.saveNotesToLocalStorage(); //lawcal\n      }\n    );\n    event.target.reset();\n  }\n\n  validateForm(event) {\n    // if(this.)\n  }\n\n  // 2. Tags.jsx\n  getFilteredTags(tag) {\n    let tempFilteredTags = [];\n    tempFilteredTags.push(tag);\n    let finalTags = [...this.state.filteredTags, tempFilteredTags];\n    let finalTags2 = finalTags.flat();\n    let finalTags3 = [...new Set(finalTags2)];\n\n    this.setState({ filteredTags: finalTags3 });\n    this.getNotesByTags(tag);\n  }\n\n  getNotesByTags(tag) {\n    if (tag === undefined) {\n      this.setState({\n        filteredNotes: this.state.notes,\n      });\n      this.setState({\n        filteredTags: [],\n      });\n    } else {\n      let tempFilteredNotesArray = [];\n      let checker = (arr, target) => target.every((item) => arr.includes(item));\n\n      // 어려운 것\n      for (let i = 0; i < this.state.notes.length; i++) {\n        if (\n          checker(this.state.notes[i].tag, this.state.filteredTags) === true\n        ) {\n          tempFilteredNotesArray.push(this.state.notes[i]);\n        }\n      }\n\n      this.setState({\n        filteredNotes: tempFilteredNotesArray,\n      });\n    }\n  }\n\n  removeFilteredTags(key) {\n    let tempFilteredTagsArray = this.state.filteredTags;\n    tempFilteredTagsArray.splice(key, 1);\n    let tempFilteredNotesArray = [];\n    let checker = (arr, target) => target.every((item) => arr.includes(item));\n\n    this.state.notes.forEach((note) => {\n      if (checker(note.tag, tempFilteredTagsArray) === true) {\n        tempFilteredNotesArray.push(note);\n      }\n    });\n\n    this.setState({\n      filteredTags: tempFilteredTagsArray,\n      filteredNotes: tempFilteredNotesArray,\n    });\n  }\n\n  // 3. Notes.jsx\n  deleteIndividualNote(event) {\n    let key = event.target.id;\n    console.log(event.target);\n    console.log(key);\n    let notesCopy = this.state.notes;\n    if (window.confirm('정말 메모를 삭제하시겠습니까?')) {\n      // 1. 잘 작동 안하는 localstorage 지우기\n      // for(let i = 0; i < localStorage.length; i++){\n      //   if(key === localStorage.getItem({i})){\n      localStorage.removeItem(localStorage.key(localStorage.length - key - 1)); //lawcal // 문제\n      //   }\n      // }\n\n      // 2. 잘 작동하는 notes[]\n      notesCopy.splice(key, 1);\n      this.setState({\n        notes: notesCopy,\n      });\n    }\n    this.getNotesByTags(!undefined);\n  }\n\n  // 4. API-related\n  saveNotesToLocalStorage() {\n    console.log('this.state.notes: ' + this.state.notes);\n    console.log('this.state.notes.length: ' + this.state.notes.length);\n    let key = this.state.notes.length - 1;\n    let item = JSON.stringify(this.state.notes[key]);\n    console.log('saveNotesToLocalStorage() item: ' + item);\n    localStorage.setItem(key, item);\n  }\n\n  retrieveNotesFromLocalStorage() {\n    let tempNotes = [];\n\n    // localStorage.forEach(localStorageItem => {\n\n    // })\n\n    for (let i = 0; i < localStorage.length; i++) {\n      let key = i;\n      let retrievingData = JSON.parse(localStorage.getItem(key));\n      console.log('retrievingData: ' + retrievingData);\n      // console.log(\"retrievingData: \" + JSON.parse(retrievingData))\n      tempNotes.push(retrievingData);\n    }\n\n    this.setState({\n      notes: tempNotes,\n    });\n  }\n  // this.setState({\n  //   notes: [...this.state.notes, { \"title\": this.state.newNoteTitle, \"tag\": this.state.newNoteTags, \"content\": this.state.newNoteContent}],\n  //   newNoteTitle: \"\",\n  //   newNoteTags: [],\n  //   newNoteContent: \"\"\n  // }, ()=>{\n  //   this.saveNotesToLocalStorage(); //lawcal\n  // });\n\n  render() {\n    return (\n      <>\n        <h1 id=\"nonDesktopMainHeading\">React Note App</h1>\n        <h1 id=\"desktopMainHeading\">React Note App Portfolio</h1>\n        <div id=\"grid\">\n          {/* 1. NewNoteForm.jsx */}\n          <NewNoteForm\n            newNoteTags={this.state.newNoteTags}\n            newNoteContent={this.state.newNoteContent}\n            validateForm={this.validateForm}\n            submitNewNote={this.submitNewNote}\n            handleNewNoteTitleChange={this.handleNewNoteTitleChange}\n            validateTags={this.validateTags}\n            addTagsButton={this.addTagsButton}\n            handleNewNoteTagChange={this.handleNewNoteTagChange}\n            handleNewNoteContentChange={this.handleNewNoteContentChange}\n            removeTags={this.removeTags}\n          />\n\n          {/* 2. Tag.jsx */}\n          <Tags\n            filteredTags={this.state.filteredTags}\n            unduplicatedTagsArray={this.state.unduplicatedTagsArray}\n            getNotesByTags={this.getNotesByTags}\n            removeFilteredTags={this.removeFilteredTags}\n            getFilteredTags={this.getFilteredTags}\n          />\n\n          {/* 3. Note.jsx */}\n          <Notes\n            filteredNotes={this.state.filteredNotes}\n            deleteIndividualNote={this.deleteIndividualNote}\n          />\n        </div>\n        <footer className=\"footer\">\n          <p>&copy; 2021 Jinwook Shin</p>\n        </footer>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n// import 'bootstrap/dist/css/bootstrap.css';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}