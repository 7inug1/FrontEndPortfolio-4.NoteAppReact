{"version":3,"sources":["Form.jsx","Note.jsx","Tag.jsx","App.jsx","index.js"],"names":["Form","id","name","onSubmit","this","props","submitNewNote","type","size","onChange","handleNewNoteTitleChange","onKeyUp","addTags","handleNewNoteTagChange","placeholder","onClick","event","addTagsButton","newNoteTags","map","newNoteTag","key","removeTags","handleNewNoteContentChange","rows","cols","React","Component","Note","filteredNotes","filteredNote","className","title","content","tag","Tag","getNotesByTags","unduplicatedTagsArray","getFilteredTags","filteredTags","filteredTag","removeFilteredTags","App","state","data","show","setShow","newNoteTitle","newNoteContent","notes","filteringTag","currentlyClickedFilter","bind","handleShow","handleClose","saveNotesToLocalStorage","retrieveNotesFromLocalStorage","i","length","item","JSON","stringify","localStorage","setItem","console","log","tempNotes","retrievingData","parse","getItem","push","setState","totalTagsArrayFlat","note","flat","tempFilteringTag","undefined","Set","tempFilteredTags","finalTags2","finalTags3","tempFilteredNotesArray","checker","arr","target","every","includes","prevProps","prevState","tempTagArrayFlat","tempTagArrayFlatUnduplicated","value","preventDefault","tempNewNoteTagsArray","splice","tempFilteredTagsArray","reset","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1e44478.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class Form extends React.Component{\r\n  render(){\r\n    return <> \r\n      {/* <h1 id=\"formHeading\">Form</h1> */}\r\n        <form id=\"form\" name=\"form\" onSubmit={this.props.submitNewNote}>\r\n          <fieldset>\r\n          <legend>New Note</legend>\r\n            <label>\r\n            Title:&nbsp; \r\n              <input type=\"text\" name=\"title\" size=\"10\" onChange={this.props.handleNewNoteTitleChange}/>\r\n            </label><br/>\r\n\r\n            <label>\r\n            Tag:&nbsp; \r\n              <input type=\"text\" name=\"tag\" size=\"55\" onKeyUp={this.props.addTags} onChange={this.props.handleNewNoteTagChange} placeholder=\"Press shift or 'Add Tag' button to add tags one by one\"/>\r\n            <button onClick={(event)=>this.props.addTagsButton(event)}>Add Tag</button> \r\n            </label>\r\n\r\n            <ul>\r\n              {this.props.newNoteTags.map((newNoteTag, key)=>\r\n                <li key={key}>\r\n                  {/* <h1>key: {key}</h1> */}\r\n                  <span>{newNoteTag}</span>\r\n                  <button onClick={(event)=>this.props.removeTags(event, key)}>‚ùå</button>\r\n                </li>\r\n              )}\r\n            </ul>\r\n\r\n            <label>\r\n            Content:&nbsp; \r\n              <textarea type=\"textarea\" name=\"content\" onChange={this.props.handleNewNoteContentChange} rows=\"4\" cols=\"47\"/>\r\n            </label><br/><br/>\r\n\r\n            <button >Submit</button>\r\n            </fieldset>\r\n        </form>\r\n      <br/>  \r\n      </>;\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Button, Modal } from 'react-bootstrap';\r\n\r\nexport default class Note extends React.Component {\r\n  render() {\r\n    return <>\r\n      {/* <h1 id=\"notesHeading\">Notes</h1> */}\r\n      <div id=\"notes\">\r\n        <div id=\"notes-container\">\r\n        {/* <h1>Notes</h1> */}\r\n        {this.props.filteredNotes.map((filteredNote, key)=>\r\n            <div className=\"individualNote\" key={key}>\r\n            {/* <div className=\"individualNote\" key={key} onClick={this.props.handleShow}> */}\r\n              <h3 className=\"individualNoteTitle\"> \r\n                {filteredNote.title} \r\n              </h3>\r\n              <hr/>\r\n              <div className=\"individualNoteContent\"> \r\n                {filteredNote.content} \r\n              </div>\r\n              {/* <hr/> */}\r\n              <div className=\"individualNoteTag\"> \r\n                  {filteredNote.tag.map((tag, key)=>\r\n                    <li key={key}>{tag}</li>\r\n                  )} \r\n              </div>\r\n            </div>\r\n\r\n            \r\n        )}\r\n          </div>\r\n        </div>\r\n    </>\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Tag extends React.Component {\r\n  render() {\r\n    return <>\r\n      <div id=\"tags\">\r\n        <div id=\"allTags\">\r\n          <h2>All tags</h2>\r\n            {/* All Button */}\r\n            <button onClick={() => this.props.getNotesByTags()}>All</button> \r\n            \r\n            {/* Rest of the buttons */}\r\n            {this.props.unduplicatedTagsArray.map((tag, key)=>\r\n              <div key={key} id=\"individualTag\">\r\n                <button onClick={() => this.props.getFilteredTags(tag)}>{tag}</button> \r\n              </div>\r\n            )}\r\n            <br/>\r\n        </div>\r\n\r\n        <div id=\"filteredTags\">\r\n          <h2>Filtered tags</h2>\r\n            {this.props.filteredTags.map((filteredTag, key)=>\r\n              <button key={key} onClick={() => this.props.removeFilteredTags(key)}>{filteredTag} ‚ùå</button>\r\n            )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react';\nimport './style.css';\nimport Form from \"./Form.jsx\";\nimport Note from \"./Note.jsx\";\nimport Tag from \"./Tag.jsx\";\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Modal } from 'react-bootstrap';\n\nexport default class App extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      key: [],\n      data: [],\n\n      show: false,\n      setShow: false,\n      \n      newNoteTitle: \"\",\n      newNoteTag: \"\",\n      newNoteTags: [],\n      newNoteContent: \"\",\n      notes: [\n        {\"title\": \"How to make a new note\", \"tag\": [\"note\"], \"content\": \"Fill out the form above to make a new note!\"}\n        // {\"title\": \"make a table\", \"tag\": [\"recipe\"], \"content\": \"Put table boil it.\"},\n        // {\"title\": \"Í≥ÑÎûÄÎ∞• ÎßåÎìúÎäî Î≤ï\", \"tag\": [\"recipe\", \"soup\"], \"content\": \"Í≥ÑÎûÄÏóê Î∞• ÎπÑÎπÑÍ∏∞\"},\n        // {\"title\": \"ÎπÑÎπîÎ∞• ÎßåÎìúÎäî Î≤ï\", \"tag\": [\"soup\", \"recipe\"], \"content\": \"Î∞• ÎπÑÎπÑÍ∏∞\"},\n        // {\"title\": \"How to study\", \"tag\": [\"recipe\", \"soup\", \"lifehack\"], \"content\": \"Just do it.\"},\n        // {\"title\": \"How to make a katsu\", \"tag\": [\"lifehack\", \"recipe\", \"soup\"], \"content\": \"Fry chicken or pork.\"},\n        // {\"title\": \"How to save money\", \"tag\": [\"lifehack\"], \"content\": \"Just save it.\"},\n        // {\"title\": \"What is life?\", \"tag\": [\"philosophy\"], \"content\": \"Life is something that has no meaning itself. You make of your own.\"}\n      ],\n      filteringTag: [], \n      filteredTags: [], \n      filteredNotes: [],\n      unduplicatedTagsArray: [],\n      currentlyClickedFilter: false\n    }\n    this.handleNewNoteTitleChange = this.handleNewNoteTitleChange.bind(this); \n    this.handleNewNoteTagChange = this.handleNewNoteTagChange.bind(this); \n    \n    this.handleNewNoteContentChange = this.handleNewNoteContentChange.bind(this); \n    this.getFilteredTags = this.getFilteredTags.bind(this);\n    this.getNotesByTags = this.getNotesByTags.bind(this);\n    this.submitNewNote = this.submitNewNote.bind(this); \n    this.addTags = this.addTags.bind(this); \n    this.addTagsButton = this.addTagsButton.bind(this); \n    this.removeFilteredTags = this.removeFilteredTags.bind(this);\n    this.removeTags = this.removeTags.bind(this);\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n\n    this.saveNotesToLocalStorage = this.saveNotesToLocalStorage.bind(this);\n    this.retrieveNotesFromLocalStorage = this.retrieveNotesFromLocalStorage.bind(this);\n  }\n  \n  saveNotesToLocalStorage(){\n    for(let i = 0; i < this.state.notes.length; i++){\n      let key = i;\n      // key.toString();\n      let item = JSON.stringify(this.state.notes[i]);\n      // console.log(\"key: \" + key)\n      // console.log(\"item: \" + (item))\n      localStorage.setItem(key, item);\n    }\n    console.log(\"localStorage length: \" + localStorage.length)\n  }\n\n  retrieveNotesFromLocalStorage(){\n    let tempNotes = [];\n    // let totalTagsArray = \n    // this.state.notes.map((note)=>\n    //   tempNotes.push(note)\n    // )\n    console.log(\"localStorage length: \" + localStorage.length)\n    for(let i = 0; i < localStorage.length; i++){\n      let key = i;\n      let retrievingData = JSON.parse(localStorage.getItem(key));\n      // console.log(\"retrievingData: \" + retrievingData)\n      // console.log(\"retrievingData: \" + JSON.parse(retrievingData))\n      tempNotes.push(retrievingData);\n    }\n    this.setState({\n      notes: tempNotes\n    })\n  }\n\n  componentDidMount(){\n    this.saveNotesToLocalStorage();\n    this.retrieveNotesFromLocalStorage();\n    let totalTagsArray = this.state.notes.map((note)=>note.tag)\n    let totalTagsArrayFlat = totalTagsArray.flat()\n    let tempFilteringTag = [undefined];\n    this.setState({\n      filteringTag: tempFilteringTag,\n      unduplicatedTagsArray: [...new Set(totalTagsArrayFlat)],\n    })\n    \n    this.getNotesByTags(); \n    \n  }\n\n  getFilteredTags(tag){\n    let tempFilteredTags = [];\n    tempFilteredTags.push(tag)\n    let finalTags = [...this.state.filteredTags, tempFilteredTags]\n    let finalTags2 = finalTags.flat();\n    let finalTags3 = [...new Set(finalTags2)]\n    \n    this.setState({filteredTags: finalTags3})\n    this.getNotesByTags(tag)\n  }\n\n  getNotesByTags(tag){\n    if(tag===undefined){\n      this.setState({\n        filteredNotes: this.state.notes \n      })\n    }else{\n      let tempFilteredNotesArray = [];\n      let checker = (arr, target) => target.every(item => arr.includes(item));\n      for(let i = 0; i < this.state.notes.length; i++){\n        if (checker(this.state.notes[i].tag, this.state.filteredTags) === true ){\n          tempFilteredNotesArray.push(this.state.notes[i])\n        }\n      }      \n      this.setState({\n        filteredNotes: tempFilteredNotesArray\n      })\n      \n    }\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    if(prevState.notes !== this.state.notes || prevState.filteredTags !== this.state.filteredTags ){\n      let tempTagArray = this.state.notes.map((note)=>note.tag) // 1. get all notes' tag\n      let tempTagArrayFlat = tempTagArray.flat() // 2. make #1 flat\n      let tempTagArrayFlatUnduplicated = [...new Set(tempTagArrayFlat)] // 3. get #2 unduplicated\n\n      this.setState({\n        unduplicatedTagsArray: tempTagArrayFlatUnduplicated\n      })\n      \n      this.getNotesByTags(!undefined);\n      // this.saveNotesToLocalStorage();\n      // this.handleShow();\n    }\n  }\n\n  handleNewNoteTitleChange(event){\n    this.setState({\n      newNoteTitle: event.target.value\n    });\n  }\n\n  addTags(event){\n    event.preventDefault();\n    // if(event === \"button\"){\n      // alert(\"button clicked\")\n    // }\n    if(event.key === \"Shift\" && event.target.value){\n      console.log(\"added\")\n      let tempNewNoteTagsArray = this.state.newNoteTags;\n      tempNewNoteTagsArray.push(event.target.value);\n\n      this.setState({\n        newNoteTags: tempNewNoteTagsArray\n      });  \n      console.log(\"newNoteTags: \" + \"[\"+this.state.newNoteTags+\"]\")\n      event.target.value = \"\";\n    } \n  }\n\n  addTagsButton(event){\n    event.preventDefault();\n\n    let tempNewNoteTagsArray = this.state.newNoteTags;\n    tempNewNoteTagsArray.push(this.state.newNoteTag);\n\n    this.setState({\n      newNoteTags: tempNewNoteTagsArray\n    });  \n    //   console.log(\"newNoteTags: \" + \"[\"+this.state.newNoteTags+\"]\")\n    \n    // event.target.value = \"\";\n    // } \n  }\n\n  handleNewNoteTagChange(event){\n    this.setState({\n      newNoteTag: event.target.value\n    });\n  }\n\n  handleNewNoteContentChange(event){\n    this.setState({\n      newNoteTag: event.target.value\n    });\n  }\n\n  removeTags(event, key){\n    event.preventDefault();\n    let tempNewNoteTagsArray = this.state.newNoteTags;\n    tempNewNoteTagsArray.splice(key, 1)\n    this.setState({\n      newNoteTags: tempNewNoteTagsArray\n    })\n  }\n\n  removeFilteredTags(key){\n    let tempFilteredTagsArray = this.state.filteredTags\n    tempFilteredTagsArray.splice(key, 1)\n    let tempFilteredNotesArray = [];\n    let checker = (arr, target) => target.every(item => arr.includes(item));\n    for(let i = 0; i < this.state.notes.length; i++){\n      if (checker(this.state.notes[i].tag, tempFilteredTagsArray) === true ){\n        tempFilteredNotesArray.push(this.state.notes[i])\n      }\n    }\n\n    this.setState({\n      filteredTags: tempFilteredTagsArray,\n      filteredNotes: tempFilteredNotesArray\n    })\n  }\n\n  submitNewNote(event){\n    event.preventDefault();\n    // console.log(this.state.newNoteTitle);\n    // console.log(this.state.newNoteTags);\n    // console.log(this.state.newNoteContent);\n    // if(this.state.newNoteTitle===\"\" || !this.state.newNoteTags===\"\" || !this.state.newNoteContent===\"\"){\n    //   alert(\"Please fill out the form for all the sections.\")\n    // }\n    // else{\n\n      this.setState({\n        notes: [...this.state.notes, { \"title\": this.state.newNoteTitle, \"tag\": this.state.newNoteTags, \"content\": this.state.newNoteContent}],\n        newNoteTitle: \"\",\n        newNoteTags: [],\n        newNoteContent: \"\"\n      });\n      event.target.reset();\n\n      console.log(this.state.notes)\n    // }\n  }\n\n  handleShow(){\n    this.setState({\n      show: true,\n      setShow: true\n    })\n  }\n\n  handleClose(){\n    this.setState({\n      show: false,\n      setShow: false\n    })\n  }\n\n  render() {\n    return (\n      <>  \n        <h1 id=\"mainHeading\">Note App</h1>\n        <div id=\"grid\">\n          {/* 1. Form */}\n          <Form \n            newNoteTags={this.state.newNoteTags}\n            newNoteContent={this.state.newNoteContent}\n            submitNewNote={this.submitNewNote} \n            handleNewNoteTitleChange={this.handleNewNoteTitleChange}\n            addTags={this.addTags}\n            addTagsButton={this.addTagsButton}\n            handleNewNoteTagChange={this.handleNewNoteTagChange}\n            handleNewNoteContentChange={this.handleNewNoteContentChange}\n            removeTags={this.removeTags}\n          />\n        \n          {/* 2. Tag */}\n          <Tag\n            filteredTags={this.state.filteredTags}\n            unduplicatedTagsArray={this.state.unduplicatedTagsArray}\n            getNotesByTags={this.getNotesByTags}\n            removeFilteredTags={this.removeFilteredTags}\n            getFilteredTags={this.getFilteredTags}\n          />\n\n          {/* 3. Note section */}\n          <Note \n            filteredNotes={this.state.filteredNotes}\n            show={this.state.show}\n            setShow={this.state.setShow}\n            handleShow={this.handleShow}\n            handleClose={this.handleClose}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}