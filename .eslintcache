[{"C:\\Users\\jwshi\\Desktop\\cmder\\react\\test\\habit-tracker\\src\\index.js":"1","C:\\Users\\jwshi\\Desktop\\cmder\\react\\test\\habit-tracker\\src\\app.jsx":"2","C:\\Users\\jwshi\\Desktop\\cmder\\react\\test\\template\\src\\index.js":"3","C:\\Users\\jwshi\\Desktop\\cmder\\react\\test\\template\\src\\app.jsx":"4","C:\\Users\\jwshi\\Desktop\\cmder\\react\\test\\note-app\\src\\index.js":"5","C:\\Users\\jwshi\\Desktop\\cmder\\react\\test\\note-app\\src\\app.jsx":"6","C:\\Users\\jwshi\\Desktop\\cmder\\react\\test\\note-app\\src\\App.jsx":"7","C:\\Users\\jwshi\\Desktop\\cmder\\react\\test\\note-app\\src\\Form.jsx":"8","C:\\Users\\jwshi\\Desktop\\cmder\\react\\test\\note-app\\src\\Note.jsx":"9","C:\\Users\\jwshi\\Desktop\\cmder\\react\\test\\note-app\\src\\Tag.jsx":"10"},{"size":219,"mtime":1610445007676,"results":"11","hashOfConfig":"12"},{"size":111,"mtime":1610447978800,"results":"13","hashOfConfig":"12"},{"size":219,"mtime":1610517526926,"results":"14","hashOfConfig":"15"},{"size":107,"mtime":1610517870250,"results":"16","hashOfConfig":"15"},{"size":219,"mtime":1611553769545,"results":"17","hashOfConfig":"18"},{"size":7439,"mtime":1611557982792,"results":"19","hashOfConfig":"20"},{"size":8283,"mtime":1612141868436,"results":"21","hashOfConfig":"18"},{"size":1342,"mtime":1612140870993,"results":"22","hashOfConfig":"18"},{"size":1097,"mtime":1612148600960,"results":"23","hashOfConfig":"18"},{"size":958,"mtime":1612148157534,"results":"24","hashOfConfig":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"pwim7y",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"38q0pz",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"h5n94g",{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"kgvucf",{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},"C:\\Users\\jwshi\\Desktop\\cmder\\react\\test\\habit-tracker\\src\\index.js",[],["50","51"],"C:\\Users\\jwshi\\Desktop\\cmder\\react\\test\\habit-tracker\\src\\app.jsx",[],"C:\\Users\\jwshi\\Desktop\\cmder\\react\\test\\template\\src\\index.js",[],"C:\\Users\\jwshi\\Desktop\\cmder\\react\\test\\template\\src\\app.jsx",[],"C:\\Users\\jwshi\\Desktop\\cmder\\react\\test\\note-app\\src\\index.js",[],["52","53"],"C:\\Users\\jwshi\\Desktop\\cmder\\react\\test\\note-app\\src\\app.jsx",["54","55"],"C:\\Users\\jwshi\\Desktop\\cmder\\react\\test\\note-app\\src\\App.jsx",["56","57","58"],"import React, { Component } from 'react';\nimport './style.css';\nimport Form from \"./Form.jsx\";\nimport Note from \"./Note.jsx\";\nimport Tag from \"./Tag.jsx\";\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Modal } from 'react-bootstrap';\n\nexport default class App extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      key: [],\n      data: [],\n\n      show: false,\n      setShow: false,\n      \n      newNoteTitle: \"\",\n      newNoteTags: [],\n      newNoteContent: \"\",\n      notes: [\n        // {\"title\": \"How to make a soup\", \"tag\": [\"recipe\"], \"content\": \"Put the powder into the pot and boil it.\"},\n        // {\"title\": \"make a table\", \"tag\": [\"recipe\"], \"content\": \"Put table boil it.\"},\n        // {\"title\": \"계란밥 만드는 법\", \"tag\": [\"recipe\", \"soup\"], \"content\": \"계란에 밥 비비기\"},\n        // {\"title\": \"비빔밥 만드는 법\", \"tag\": [\"soup\", \"recipe\"], \"content\": \"밥 비비기\"},\n        // {\"title\": \"How to study\", \"tag\": [\"recipe\", \"soup\", \"lifehack\"], \"content\": \"Just do it.\"},\n        // {\"title\": \"How to make a katsu\", \"tag\": [\"lifehack\", \"recipe\", \"soup\"], \"content\": \"Fry chicken or pork.\"},\n        // {\"title\": \"How to save money\", \"tag\": [\"lifehack\"], \"content\": \"Just save it.\"},\n        // {\"title\": \"What is life?\", \"tag\": [\"philosophy\"], \"content\": \"Life is something that has no meaning itself. You make of your own.\"}\n      ],\n      filteringTag: [], \n      filteredTags: [], \n      filteredNotes: [],\n      unduplicatedTagsArray: [],\n      currentlyClickedFilter: false\n    }\n    this.handleNewNoteTitleChange = this.handleNewNoteTitleChange.bind(this); \n    this.handleNewNoteContentChange = this.handleNewNoteContentChange.bind(this); \n    this.getFilteredTags = this.getFilteredTags.bind(this);\n    this.getNotesByTags = this.getNotesByTags.bind(this);\n    this.submitNewNote = this.submitNewNote.bind(this); \n    this.addTags = this.addTags.bind(this); \n    this.removeFilteredTags = this.removeFilteredTags.bind(this);\n  \n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n\n    this.saveNotesToLocalStorage = this.saveNotesToLocalStorage.bind(this);\n    this.retrieveNotesFromLocalStorage = this.retrieveNotesFromLocalStorage.bind(this);\n  }\n  \n  saveNotesToLocalStorage(){\n    for(let i = 0; i < this.state.notes.length; i++){\n      let key = i;\n      // key.toString();\n      let item = JSON.stringify(this.state.notes[i]);\n      // console.log(\"key: \" + key)\n      // console.log(\"item: \" + (item))\n      localStorage.setItem(key, item);\n    }\n    console.log(\"localStorage length: \" + localStorage.length)\n  }\n\n  retrieveNotesFromLocalStorage(){\n    let tempNotes = [];\n    console.log(\"localStorage length: \" + localStorage.length)\n    for(let i = 0; i < localStorage.length; i++){\n      let key = i;\n      let retrievingData = JSON.parse(localStorage.getItem(key));\n      // console.log(\"retrievingData: \" + retrievingData)\n      // console.log(\"retrievingData: \" + JSON.parse(retrievingData))\n      tempNotes.push(retrievingData);\n    }\n    this.setState({\n      notes: tempNotes\n    })\n  }\n\n  componentDidMount(){\n    this.retrieveNotesFromLocalStorage();\n    let totalTagsArray = this.state.notes.map((note)=>note.tag)\n    let totalTagsArrayFlat = totalTagsArray.flat()\n    let tempFilteringTag = [undefined];\n    this.setState({\n      filteringTag: tempFilteringTag,\n      unduplicatedTagsArray: [...new Set(totalTagsArrayFlat)],\n    })\n    \n    this.getNotesByTags(); \n    \n  }\n\n  getFilteredTags(tag){\n    let tempFilteredTags = [];\n    tempFilteredTags.push(tag)\n    let finalTags = [...this.state.filteredTags, tempFilteredTags]\n    let finalTags2 = finalTags.flat();\n    let finalTags3 = [...new Set(finalTags2)]\n    \n    this.setState({filteredTags: finalTags3})\n    this.getNotesByTags(tag)\n  }\n\n  getNotesByTags(tag){\n    if(tag===undefined){\n      this.setState({\n        filteredNotes: this.state.notes \n      })\n    }else{\n      let tempFilteredNotesArray = [];\n      let checker = (arr, target) => target.every(item => arr.includes(item));\n      for(let i = 0; i < this.state.notes.length; i++){\n        if (checker(this.state.notes[i].tag, this.state.filteredTags) === true ){\n          tempFilteredNotesArray.push(this.state.notes[i])\n        }\n      }      \n      this.setState({\n        filteredNotes: tempFilteredNotesArray\n      })\n      \n    }\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    if(prevState.notes !== this.state.notes || prevState.filteredTags !== this.state.filteredTags ){\n      let tempTagArray = this.state.notes.map((note)=>note.tag) // 1. get all notes' tag\n      let tempTagArrayFlat = tempTagArray.flat() // 2. make #1 flat\n      let tempTagArrayFlatUnduplicated = [...new Set(tempTagArrayFlat)] // 3. get #2 unduplicated\n\n      this.setState({\n        unduplicatedTagsArray: tempTagArrayFlatUnduplicated\n      })\n      \n      this.getNotesByTags(!undefined);\n      this.saveNotesToLocalStorage();\n      // this.handleShow();\n    }\n  }\n\n  handleNewNoteTitleChange(event){\n    this.setState({\n      newNoteTitle: event.target.value\n    });\n  }\n\n  addTags(event){\n    event.preventDefault();\n    if(event.key === \"Shift\" && event.target.value){\n      console.log(\"added\")\n      let tempNewNoteTagsArray = this.state.newNoteTags;\n      tempNewNoteTagsArray.push(event.target.value);\n\n      this.setState({\n        newNoteTags: tempNewNoteTagsArray\n      });  \n      console.log(\"newNoteTags: \" + \"[\"+this.state.newNoteTags+\"]\")\n      event.target.value = \"\";\n    } \n  }\n\n  handleNewNoteContentChange(event){\n    this.setState({\n      newNoteContent: event.target.value\n    });\n  }\n\n  removeFilteredTags(key){\n    let tempFilteredTagsArray = this.state.filteredTags\n    tempFilteredTagsArray.splice(key, 1)\n    let tempFilteredNotesArray = [];\n    let checker = (arr, target) => target.every(item => arr.includes(item));\n    for(let i = 0; i < this.state.notes.length; i++){\n      if (checker(this.state.notes[i].tag, tempFilteredTagsArray) === true ){\n        tempFilteredNotesArray.push(this.state.notes[i])\n      }\n    }\n\n    this.setState({\n      filteredTags: tempFilteredTagsArray,\n      filteredNotes: tempFilteredNotesArray\n    })\n  }\n\n  submitNewNote(event){\n    event.preventDefault();\n    // console.log(this.state.newNoteTitle);\n    // console.log(this.state.newNoteTags);\n    // console.log(this.state.newNoteContent);\n    // if(this.state.newNoteTitle===\"\" || !this.state.newNoteTags===\"\" || !this.state.newNoteContent===\"\"){\n    //   alert(\"Please fill out the form for all the sections.\")\n    // }\n    // else{\n\n      this.setState({\n        notes: [...this.state.notes, { \"title\": this.state.newNoteTitle, \"tag\": this.state.newNoteTags, \"content\": this.state.newNoteContent}],\n        newNoteTitle: \"\",\n        newNoteTags: [],\n        newNoteContent: \"\"\n      });\n      event.target.reset();\n\n      console.log(this.state.notes)\n    // }\n  }\n\n  handleShow(){\n    this.setState({\n      show: true,\n      setShow: true\n    })\n  }\n\n  handleClose(){\n    this.setState({\n      show: false,\n      setShow: false\n    })\n  }\n\n  render() {\n    return (\n      <>  \n        <h1 id=\"mainHeading\">Note App</h1>\n        <div id=\"grid\">\n          {/* 1. Form */}\n          <Form \n            newNoteTags={this.state.newNoteTags}\n            newNoteContent={this.state.newNoteContent}\n            submitNewNote={this.submitNewNote} \n            handleNewNoteTitleChange={this.handleNewNoteTitleChange}\n            addTags={this.addTags}\n            handleNewNoteContentChange={this.handleNewNoteContentChange}\n          />\n        \n          {/* 2. Tag */}\n          <Tag\n            filteredTags={this.state.filteredTags}\n            unduplicatedTagsArray={this.state.unduplicatedTagsArray}\n            getNotesByTags={this.getNotesByTags}\n            removeFilteredTags={this.removeFilteredTags}\n            getFilteredTags={this.getFilteredTags}\n          />\n\n          {/* 3. Note section */}\n          <Note \n            filteredNotes={this.state.filteredNotes}\n            show={this.state.show}\n            setShow={this.state.setShow}\n            handleShow={this.handleShow}\n            handleClose={this.handleClose}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\n","C:\\Users\\jwshi\\Desktop\\cmder\\react\\test\\note-app\\src\\Form.jsx",["59"],"import React, { Component } from 'react';\r\n\r\nexport default class Form extends React.Component{\r\n  render(){\r\n    return <> \r\n      {/* <h1 id=\"formHeading\">Form</h1> */}\r\n        <form id=\"form\" name=\"form\" onSubmit={this.props.submitNewNote}>\r\n          <fieldset>\r\n          <legend>New Note</legend>\r\n            <label>\r\n            Title:&nbsp; \r\n              <input type=\"text\" name=\"title\" onChange={this.props.handleNewNoteTitleChange}/>\r\n            </label><br/>\r\n\r\n            <label>\r\n            Tag:&nbsp; \r\n              <input type=\"text\" name=\"tag\" onKeyUp={this.props.addTags} placeholder=\"Press shift to add tags\" size=\"80\"/>\r\n            </label><br/>\r\n            <ul>\r\n              {this.props.newNoteTags.map((newNoteTag, key)=>\r\n                <li key={key}>\r\n                  {/* <h1>key: {key}</h1> */}\r\n                  <span>{newNoteTag}</span>\r\n                  <button onClick={(event)=>this.props.removeTags(event, key)}>X</button>\r\n                </li>\r\n              )}\r\n            </ul>\r\n\r\n            <label>\r\n            Content:&nbsp; \r\n              <textarea type=\"textarea\" name=\"content\" onChange={this.props.handleNewNoteContentChange}/>\r\n            </label><br/>\r\n\r\n            <button >Submit</button>\r\n            </fieldset>\r\n        </form>\r\n      <br/>\r\n      \r\n      </>;\r\n    }\r\n}\r\n","C:\\Users\\jwshi\\Desktop\\cmder\\react\\test\\note-app\\src\\Note.jsx",["60","61","62"],"C:\\Users\\jwshi\\Desktop\\cmder\\react\\test\\note-app\\src\\Tag.jsx",["63"],"import React, { Component } from 'react';\r\n\r\nexport default class Tag extends React.Component {\r\n  render() {\r\n    return <>\r\n      <div id=\"tags\">\r\n        <div id=\"allTags\">\r\n          <h2>All tags</h2>\r\n            {/* All Button */}\r\n            <button onClick={() => this.props.getNotesByTags()}>All</button> \r\n            \r\n            {/* Rest of the buttons */}\r\n            {this.props.unduplicatedTagsArray.map((tag, key)=>\r\n              <div key={key} id=\"individualTag\">\r\n                <button onClick={() => this.props.getFilteredTags(tag)}>{tag}</button> \r\n              </div>\r\n            )}\r\n            <br/>\r\n        </div>\r\n\r\n        <div id=\"filteredTags\">\r\n          <h2>Filtered tags</h2>\r\n            {this.props.filteredTags.map((filteredTag, key)=>\r\n              <button key={key} onClick={() => this.props.removeFilteredTags(key)}>{filteredTag} ❌</button>\r\n            )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  }\r\n}\r\n\r\n\r\n",{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"64","replacedBy":"68"},{"ruleId":"66","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":163,"column":35,"nodeType":"72","messageId":"73","endLine":163,"endColumn":36},{"ruleId":"70","severity":1,"message":"71","line":177,"column":33,"nodeType":"72","messageId":"73","endLine":177,"endColumn":34},{"ruleId":"74","severity":1,"message":"75","line":7,"column":10,"nodeType":"76","messageId":"77","endLine":7,"endColumn":16},{"ruleId":"74","severity":1,"message":"78","line":7,"column":18,"nodeType":"76","messageId":"77","endLine":7,"endColumn":23},{"ruleId":"70","severity":1,"message":"71","line":158,"column":35,"nodeType":"72","messageId":"73","endLine":158,"endColumn":36},{"ruleId":"74","severity":1,"message":"79","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":26},{"ruleId":"74","severity":1,"message":"79","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":26},{"ruleId":"74","severity":1,"message":"75","line":3,"column":10,"nodeType":"76","messageId":"77","endLine":3,"endColumn":16},{"ruleId":"74","severity":1,"message":"78","line":3,"column":18,"nodeType":"76","messageId":"77","endLine":3,"endColumn":23},{"ruleId":"74","severity":1,"message":"79","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":26},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],["80"],["81"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Modal' is defined but never used.","'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]